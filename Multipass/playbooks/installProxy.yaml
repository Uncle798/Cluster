---
- name: Initialize proxy hosts
  hosts: proxyCluster
  remote_user: branson
  become: true
  vars_files:
    ~/Documents/Cluster/Multipass/secrets/vault_vars.yaml
  vars:
    - haproxy_vip: 192.168.4.11
    - k3sControl_port: 6443
    - haproxy_node_name: "{{ ansbile_facts['nodename']  }}"
    - api_token: "{{ lookup('community.general.onepassword',
        'Cloudflare DNS zone key',
        field='credential',
        vault='Ansible',
        service_account_token=auth_token)
        }}"
    - keepalived_auth_pass: "{{ lookup('community.general.onepassword',
        'keepalived haproxy pass',
        field='credential',
        vault='Ansible',
        service_account_token=auth_token)
        }}"
    - keepalived_router_id: 21
    - keepalived_interface: "{{ ansbile_facts['interfaces'][0] }}"
  tasks:
    - name: Install thru apt
      ansible.builtin.apt:
        update_cache: true
        name: "{{ item }}"
      loop:
        - keepalived
        - haproxy
        - inadyn
    - name: Install certbot
      community.general.snap:
        name: certbot
        classic: true
    - name: Setup the symbolic link
      ansible.builtin.file:
        src: /snap/bin/certbot
        dest: /usr/bin/certbot
        state: link
    - name: Acknowledge warning
      ansible.builtin.command: snap set certbot trust-plugin-with-root=ok
      register: output
      changed_when: output.msg.changed is true
      failed_when: output.msg.failed is true
    - name: Install certbot cloudflare plugin
      community.general.snap:
        name: certbot-dns-cloudflare
    - name: Setup certbot user
      ansible.builtin.user:
        name: certbot
        home: /opt/certbot
        state: present
        append: true
    - name: Certbot sudoer
      community.general.sudoers:
        name: certbot
        user: certbot
        nopassword: true
        commands:
          - /bin/systemctl restart haproxy
    - name: Add haproxy to certbot group
      ansible.builtin.user:
        name: haproxy
        groups: certbot
        append: true
    - name: Add branson to certbot group
      ansible.builtin.user:
        name: branson
        groups: certbot
        append: true
    - name: Add certbot config folder
      ansible.builtin.file:
        state: directory
        path: /opt/certbot/"{{ item }}"
        owner: certbot
        mode: ug=rx
      loop:
        - config
        - logs
    - name: Add certbot etc folders
      ansible.builtin.file:
        state: directory
        path: /etc/certbot/renewal
        owner: certbot
        mode: ug=rx
    - name: Set top priority variable
      ansible.builtin.set_fact:
        keepalived_priority: 255
      when: ansible_facts['nodename'] | regex('[01]') == '01'
      run_once: true
      register: keepalived_next_priority
      delegate_facts: true
      delegate_to: localhost
    - name: Set next priority
      serial: 1
      ansible.builtin.set_fact:
        keepalived_priority: {{ intem | int }}
      register: keepalived_next_priority
      delegate_facts: true
      delegate_to: localhost
      loop: '{{ range(245, 0, 10) }}'
    - name: Configure certbot
      ansible.builtin.template:
        src: ~/Documents/Cluster/Multipass/configs/certbot.conf
        dest: /opt/certbot/config/certbot.conf
        owner: certbot
        mode: ug=rx
      throttle: 1
    - name: Configure keepalived
      ansible.builtin.template:
        src: ~/Documents/Cluster/Multipass/configs/keepalived.conf
        dest: /etc/keepalived/keepalived.conf
        mode: ug=rx
    - name: Add haproxy folders
      ansible.builtin.file:
        state: directory
        path: /etc/haproxy/
        mode: ug=rx
    - name: Configure haproxy
      ansible.builtin.template:
        src: ~/Documents/Cluster/Multipass/configs/haproxy.cnf
        dest: /etc/haproxy/haproxy.cnf
        mode: ug=rx
    - name: Generate DH params field
      community.crypto.openssl_dhparam:
        path: /opt/certbot/dhparams.pem
        owner: certbot
        group: certbot
        mode: u=rwx, go=r
        size: 4096
    - name: Configure inadyn
      ansible.builtin.copy:
        src: ~/Documents/Cluster/Multipass/configs/inadyn.conf
        dest: /etc/inadyn.conf
        mode: ug=rx
    - name: Enable everything
      ansible.builtin.systemd_service:
        name: "{{ item }}"
        enabled: true
        state: reloaded
      loop:
        - keepalived
        - haproxy
        - inadyn
    - name: Reboot
      ansible.builtin.reboot:
        connect_timeout: 5
        reboot_timeout: 600
        post_reboot_delay: 30
        test_command: uptime

