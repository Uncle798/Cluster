---
- name: Init arm boards
  hosts: armBoards
  become: true
  remote_user: branson
  vars_files: 
    /Users/ericbranson/Documents/Cluster/secrets/vault_vars.yaml
  vars:
    branson_password: "{{ lookup('community.general.onepassword',
      'music pi',
      field='password',
      vault='Ansible',
      service_account_token=auth_token)
      }}"
    ssh_key_pub: '{{ ssh_key_path }}.pub'
  tasks:
    - name: Set hostname 
      ansible.builtin.hostname:
        name: '{{ inventory_hostname }}'
    - name: Set timezone
      community.general.timezone:
        name: America/Boise
    - name: Change password
      ansible.builtin.user:
        name: branson
        password: "{{ branson_password | password_hash('sha512') }}"
    - name: Branson sudoer
      community.general.sudoers:
        name: branson
        user: branson
        nopassword: true
        commands:
          - ALL
    - name: Update apt
      ansible.builtin.apt:
        update_cache: true
        upgrade: true
    - name: Check if reboot required
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_required_file
    - name: Reboot if required
      ansible.builtin.reboot:
      when: reboot_required_file.stat.exists == true
    - name: Install thru apt
      ansible.builtin.apt:
        name: '{{ item }}'
      loop: 
        - build-essential
        - git
        - autoconf
        - automake
        - libpopt-dev
        - libconfig-dev
        - libasound2-dev
        - avahi-daemon
        - libavahi-client-dev
        - libssl-dev
        - libsoxr-dev
        - libplist-dev
        - libsodium-dev
        - libavutil-dev
        - libavcodec-dev
        - libavformat-dev
        - uuid-dev
        - libgcrypt-dev
        - xxd
        - python3-full
        - python3-pip
        - python3-setuptools
        - python3-bcrypt
    - name: Download install script
      ansible.builtin.command:
        cmd: wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        creates: /home/branson/install.sh
      become: true
      become_user: branson
    - name: Run omzInstall script
      ansible.builtin.command:
        cmd: sh /home/branson/install.sh --unattended
        creates: /home/branson/.oh-my-zsh/oh-my-zsh.sh
      become: true
      become_user: branson
    - name: Set Zsh Config
      ansible.builtin.copy:
        src: ~/Documents/Cluster/Multipass/configs/zshrc.conf
        dest: /home/branson/.zshrc
        owner: branson
        mode: ug=rw,
    - name: Change shell
      ansible.builtin.user:
        name: branson
        shell: /bin/zsh
    - name: Check if reboot required 2
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_required_file
    - name: Reboot if required 2
      ansible.builtin.reboot:
      when: reboot_required_file.stat.exists == true
    - name: Generate SSH keys
      community.crypto.openssh_keypair:
        path: '{{ ssh_key_path }}'
        owner: branson
        mode: u=rw,go=r
        passphrase: branson_password
        state: present
        # comment: branson@{{ hostvars[inventory_hostname].ansible_host }}
    - name: Slurp key
      ansible.builtin.slurp:
        src: '{{ ssh_key_pub }}'
      register: pub_key
    - name: Set keys
      ansible.posix.authorized_key:
        user: branson
        state: present
        key: '{{ pub_key.content | b64decode }}'
    - name: Print key
      ansible.builtin.debug:
        var: '{{ pub_key.content | b64decode }}'
    - name: Add keys to mac known_hosts
      delegate_to: localhost
      become: true
      ansible.builtin.command:
        cmd: ssh-keyscan {{ hostvars[inventory_hostname].ansible_host }} >> ~/.ssh/known_hosts
    - name: Clone nqptp
      ansible.builtin.git:
        repo: https://github.com/mikebrady/nqptp.git
        clone: true
        dest: /home/branson/nqptp
    - name: Nqptp autoreconf 
      ansible.builtin.command:
        chdir: /home/branson/nqptp
        cmd: '{{ item }}'
      loop:
        - autoreconf -fi
        - ./configure --with-systemd-startup
        - make
    - name: Install nqptp
      ansible.builtin.command:
        cmd: make install
        chdir: /home/branson/nqptp
      become: true
    - name: Enable nqptp
      ansible.builtin.systemd_service:
        name: nqptp
        state: restarted
        enabled: true
    - name: Clone shairport-sync
      ansible.builtin.git:
        repo: https://github.com/mikebrady/shairport-sync.git
        clone: true
        dest: /home/branson/shairport-sync
    - name: Shairport-sync autoreconf
      ansible.builtin.command:
        chdir: /home/branson/shairport-sync
        cmd: '{{ item }}'
      loop:
        - autoreconf -fi
        - ./configure --sysconfdir=/etc --with-alsa --with-soxr --with-avahi --with-ssl=openssl --with-systemd --with-airplay-2
        - make
    - name: Install shairport-sync
      ansible.builtin.command:
        chdir: /home/branson/shairport-sync
        cmd: make install
      become: true
    - name: Make scripts dir
      ansible.builtin.file:
        state: directory
        path: /home/branson/scripts
        owner: branson
        mode: ugo=rwx
    - name: Make log file
      ansible.builtin.file:
        state: touch
        path: /home/branson/shairport-sync/log.log
        owner: branson
        mode: ugo=rw
    - name: Copy over conf file
      ansible.builtin.copy:
        src: /Users/ericbranson/Documents/Cluster/armBoards/shairport-sync.conf
        dest: /etc/shairport-sync.conf
        mode: ugo=rw
    - name: Copy over relay on script
      ansible.builtin.copy:
        src: /Users/ericbranson/Documents/Cluster/armBoards/scripts/kitchenStereoRelayOn.sh
        dest: /home/branson/scripts/speakerRelayOn.sh
        mode: ugo=rwx
        owner: branson
    - name: Copy over relay off script
      ansible.builtin.copy:
        src: /Users/ericbranson/Documents/Cluster/armBoards/scripts/kitchenStereoRelayOff.sh
        dest: /home/branson/scripts/speakerRelayOff.sh
        mode: ugo=rwx
        owner: branson
    - name: Enable shairport-sync
      ansible.builtin.systemd_service:
        name: shairport-sync
        state: restarted
        enabled: true
    - name: Clone wiringOP
      ansible.builtin.git:
        repo: https://github.com/orangepi-xunlong/wiringOP.git
        clone: true
        dest: /home/branson/wiringOP
    - name: Build wiringOP
      ansible.builtin.command:
        chdir: /home/branson/wiringOP
        cmd: '{{ item }}'
      loop:
        - ./build clean
        - ./build
    - name: Read gpio
      ansible.builtin.command:
        cmd: gpio readall
      register: gpio_readall
    - name: Print gpio
      ansible.builtin.debug:
        var: gpio_readall
    - name: Auto remove
      ansible.builtin.apt:
        autoremove: true
    - name: Check if reboot required 3
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_required_file
    - name: Reboot if required 3
      ansible.builtin.reboot:
        connect_timeout: 5
        reboot_timeout: 10
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists == true
...
        