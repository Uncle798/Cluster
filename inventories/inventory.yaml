# Hardware
chromeboxes:
  hosts:
    chromebox01.local:
      ansible_host: 192.168.4.17
    chromebox02.local:
      ansible_host: 192.168.4.18
    chromebox03.local:
      ansible_host: 192.168.4.19
    chromebox05.local:
      ansible_host: 192.168.4.25
    chromebox11.local:
      ansible_host: 192.168.4.51
    chromebox12.local:
      ansible_host: 192.168.4.52
    chromebox13.local:
      ansible_host: 192.168.4.20
    chromebox14.local:
      ansible_host: 192.168.4.22
    chromebox15.local:
      ansible_host: 192.168.4.21

armBoards:
  hosts:
    kitchenStereo.local:
      ansible_host: 192.168.1.14
      ansible_ssh_pass: "{{ lookup('community.general.onepassword',
        'music pi',
        field='password',
        vault='Ansible',
        service_account_token=auth_token)
        }}"     

myMac:
  hosts:
    ericsMac:
      ansible_host: 192.168.1.51
      become_user: ericbranson
      ansible_python_interpreter: auto_silent
      ansible_connection: local
      become_method: sudo
      ansible_become_password: "{{ mac_become_pass }}"

# Locations
myoffice:
  hosts:
    chromebox01.local:
    chromebox02.local:
    chromebox03.local:
    chromebox11.local:
    chromebox12.local:
    chromebox13.local:
downstairs_living_room:
  hosts:
    ericsMac:
    chromebox14.local:
    chromebox15.local:
garage:
  hosts:
    chromebox05.local:

# Software
testing:
  hosts:
    chromebox15.local:
      ansible_host:
        192.168.4.21
haproxy_cluster:
  hosts:
    chromebox14.local:
    chromebox15.local:
    chromebox05.local:
  vars:
    haproxy_vip: "192.168.4.201"
    k3s_control_port: 6443

audio_players:
  hosts:
    chromebox14.local:
      airplay_name: "Downstairs Stereo"
    chromebox15.local:
      airplay_name: "Test Bench"
    kitchenStereo.local:
      airplay_name: "Kitchen Stereo"

video_servers:
  hosts:
    chromebox05.local:
    chromebox15.local:

k3s_cluster:
  children:
    server:
      hosts:
        chromebox01.local:
        chromebox02.local:
        chromebox03.local:
    agent:
      hosts:
        chromebox11.local:
        chromebox12.local:
        chromebox13.local:
  vars:
    ansible_port: 22
    ansible_user: branson
    k3s_version: v1.29.2+k3s1
    token: "{{ k3s_token }}"
    api_endpoint: "{{ hostvars[groups['server'][0]]['ansible_host'] | default(groups['server'][0]) }}"
    extra_server_args: ""
    extra_agent_args: ""

  # Optional vars
    # k3s_server_location: /var/lib/rancher/k3s
    # systemd_dir: /etc/systemd/system
    # extra_service_envs: [ 'ENV_VAR1=VALUE1', 'ENV_VAR2=VALUE2' ]
    # Manifests or Airgap should be either full paths or relative to the playbook directory.
    # List of locally available manifests to apply to the cluster, useful for PVCs or Traefik modifications.
    # extra_manifests: [ '/path/to/manifest1.yaml', '/path/to/manifest2.yaml' ]
    # airgap_dir: /tmp/k3s-airgap-images
    # user_kubectl: true, by default kubectl is symlinked and configured for use by ansible_user. Set to false to only kubectl via root user.
    # server_config_yaml:  |
      # This is now an inner yaml file. Maintain the indentation.
      # YAML here will be placed as the content of /etc/rancher/k3s/config.yaml
      # See https://docs.k3s.io/installation/configuration#configuration-file
