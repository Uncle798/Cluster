
global
    maxconn 200
    user haproxy
    group haproxy
    daemon
    cluster-secret {{ haproxy_secret }}
    node {{ haproxy_node_name }}

defaults
    mode                    http
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m

frontend http-in
    bind {{ haproxy_vip }}:80
    # Listen on port 443
    # Uncomment after running certbot for the first time, a certificate
    # needs to be installed *before* HAProxy will be able to start when this
    # directive is not commented.
    #
    # bind \*:443 ssl crt /opt/certbot/haproxy_fullchains/__fallback.pem crt /opt/certbot/haproxy_fullchains
    # Forward Certbot verification requests to the certbot-haproxy plugin
    acl is_certbot path_beg -i /.well-known/acme-challenge
    rspadd Strict-Transport-Security:\ max-age=31536000;\ includeSubDomains;\ preload
    rspadd X-Frame-Options:\ DENY
    use_backend certbot if is_certbot

backend certbot
    log global
    mode http
    server certbot 127.0.0.1:8000


frontend k3s_control_front
    bind {{ haproxy_vip }}:{{ k3s_control_port }}
    default_backend k3s_control_back

backend k3s_control_back
    mode http
    balance leaseconn
    option forwardfor
    option http-server-close
    option httpclose
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    {% for host in k3s_control_cluster %}
        server {{ host['inventory_hostname'] }} {{ host['ansible_host'] }}:{{ k3sControl_port }} check
    {% endfor %}
